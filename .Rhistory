df_Names <- unzip(temp, exdir = "data/", list = TRUE )
df_Names <- unzip(temp, exdir = "data", list = TRUE )
df_Names
dir()
dir("data/")
dir("UCI HAR Dataset/")
getwd()
ls()
dir()
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
?installed.packages
installed.packages()
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
head("UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
?unzip
df_Names <- unzip(temp, files = TRUE)
df_Names <- unzip(temp, files = fileNames)
df_Names <- unzip(temp, list = TRUE)
df_Names
df_Names <- unzip(temp, list = TRUE, exdir = "data/")
df_Names <- unzip(temp, list = TRUE, exdir = data)
df_Names <- unzip(temp, list = FALSE, exdir = data)
df_Names <- unzip(temp, list = FALSE, exdir = "data")
str(df_Names)
ls("data/UCI HAR Dataset/")
df_Names[1]
df_Names[2]
df_Names[5]
filePaths <= c(test, train)
filePaths <- c(test, train)
filePaths <- c("test", "train")
df_Names <- unzip(temp, files = filePaths, list = FALSE, exdir = "data")
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
for(i in seq_along(df_Names)){
unz(df_Names[i], temp )
}
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
df_Names
x_train <- read.table(df_Names[15], header = FALSE, row.names = df_Names[2] )
x_train <- read.table(df_Names[15], header = FALSE )
# 2) Merge the training and the test sets.
head(x_train)
str(x_train)
x_train <- read.table(df_Names[15], header = FALSE, col.names = df_Names[2] )
df_Names[2]
colNames <- read.table(df_Names[2])
str(colNames)
x_train <- read.table(df_Names[15], header = FALSE, col.names = colNames[,2] )
head(x_train)
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
train <- mutate(train, dataSet = "train")
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
tail(train)
tail(test)
merge(test,train)
all_data <- merge(test,train)
head(all_data)
all_data <- rbind_all(train, test)
all_data <- bind_rows(train, test)
tail(all_data)
str(all_data)
sd_mean <- select(all_data, contains("mean" | "std"))
str(sd_mean)
sd_mean <- select(all_data, contains("mean"))
str(sd_mean)
sd_mean <- select(all_data, contains("mean"), contains("std"))
str(sd_mean)
df_Names
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
head(train)
trainAct
str(testAct)
str(trainAct)
str(testAct)
train <- mutate(train, dataSet = "train", activity = trainAct)
test <- mutate(test, dataSet = "test", activity = testAct)
trainAct <- list(df_Names[16])
trainAct
trainAct <- read.table(df_Names[16], header = FALSE)
trainAct
str(trainAct)
str(train)
train <- mutate(train, dataSet = "train", activity = trainAct)
train <- cbind(train, trainAct)
str(train)
head(train)
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
test <- cbind(train, activity = testAct)
df_Names
str(testAct)
View(test)
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
test <- cbind(test, activity = testAct)
str(test)
head(test)
train <- cbind(train, trainAct, colnames(activity))
train <- cbind(train, trainAct, colnames("activity"))
train <- cbind(train, trainAct, colnames ="activity")
head(train))
head(train)
train <- cbind(train, "activity" = trainAct)
head(train)
train <- cbind(train, colnames("activity") = trainAct)
train <- cbind(train, colnames(activity) = trainAct)
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
sd_mean <- select(all_data, contains("mean"), contains("std"))
str(sd_mean)
tail(sd_mean)
sd_mean <- select(all_data, v1, contains("mean"), contains("std"))
sd_mean <- select(all_data, activity = V1, contains("mean"), contains("std"))
str(sd_mean)
sd_mean <- select(all_data, activity = as.factor(V1), contains("mean"), contains("std"))
df_Names
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
sd_mean <- mutate(sd_mean, label = activity_labels[,activity])
library(SQLR)
library(RSQL)
activity_labels <- read.table(df_Names[1], header = FALSE, col.names = c("activityID", "label"))
activity_labels
sd_mean <- merge(sd_mean, activity_labels, by = activityID)
sd_mean <- select(all_data, activityID = V1, contains("mean"), contains("std"))
sd_mean <- merge(sd_mean, activity_labels, by = activityID)
sd_mean <- merge(sd_mean, activity_labels, by = "activityID")
head(sd_mean)
df_Names
test <- read.table(df_Names[15], header = FALSE, col.names = colNames[,2] )
test <- mutate(test, dataSet = "test", activityID = testAct)
test <- mutate(test, dataSet = "test", activityID = testAct[,1])
testAct <- read.table(df_Names[16], header = FALSE)
test <- mutate(test, dataSet = "test", activityID = testAct[,1])
head(test)
train <- read.table(df_Names[27], header = FALSE, col.names = colNames[,2])
trainAct <- read.table(df_Names[28], header = FALSE)
#tidy train table
train <- mutate(train, dataSet = "train", activityID = trainAct[,1])
head(train)
str(train)
df <- bind_rows(train, test)
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
sd_mean <- select(df, subj, activityID, contains("mean"), contains("std"))
str(sd_mean)
?summarize
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
names(train)
colNames
tolower(colNames[,2])
colNames <- tolower(read.table(df_Names[2]))
colNames
names(colNames)
colNames <- read.table(df_Names[2])
names(colNames)
colNames
colNames <- select(read.table(df_Names[2]),2)
colNames
colNames <- select(read.table(df_Names[2]), names = 2)
head(colNames)
mutate(tolower(colNames$names))
colNames %>%
select(read.table(df_Names[2]), names = 2) %>%
mutate(tolower(colNames$names))
colNames <- select(read.table(df_Names[2]), names = 2) %>%
mutate(tolower(colNames$names))
head(colNames)
mutate(colNames, names = tolower(colNames$names))
colNames <- select(read.table(df_Names[2]), names = 2)
mutate(colNames, names = tolower(colNames$names))
colNames <- select(read.table(df_Names[2]), names = 2) %>%
mutate(names = tolower(colNames$names))
head(colNames)
?gsub
colNames <- select(read.table(df_Names[2]), names = 2) %>%
mutate(names = tolower(colNames$names)) %>%
mutate(gsub("[^a-z]","",names))
head(colNames)
colNames <- select(read.table(df_Names[2]), names = 2) %>%
mutate(names = tolower(colNames$names)) %>%
mutate(names = gsub("[^a-z]","",names))
head(colNames)
?trimws
?str_trim
??str_trim
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
install.packages("tidyverse")
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
ls()
rm(list=ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
rm(list=ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
colNames <- select(read.table(df_Names[2]), names = 2)
head(colNames)
mutate(names = tolower(names)) %>%
head(colNames)
mutate(names = tolower(names)) # %>%
mutate(colNames, names = tolower(names)) # %>%
rm(colNames)
colNames <- select(read.table(df_Names[2]), names = 2) %>%
mutate(names = tolower(names))  %>%
mutate(names = trimws(gsub("[^a-z]","",names)),"both")
head(colNames)
rm(list=ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
test <- read.table(df_Names[15], header = FALSE)#, col.names = colNames)
names(test)
test <- read.table(df_Names[15], header = FALSE, col.names = colNames)
len(colNames)
length(colNames)
colNames
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
rm(list=ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
train %>%
mutate(subj = trainSubj[,1],
dataSet = "train",
activityID = trainAct[,1])
train <- mutate(subj = trainSubj[,1],
dataSet = "train",
activityID = trainAct[,1])
train <- mutate(train, subj = trainSubj[,1], dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = testSubj[,1], dataSet = "test", activityID = testAct[,1])
rm(list=ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
rm(df)
rm(test*)
rm(list=grep("test"))
ls("test")
?ls
ls(pattern="test")
rm(list(pattern="test|train"))
rm(list=ls(pattern="test|train"))
?require
?installed.packages
installed.packages()
installed.packages("tidyverse")
installed.packages("stringr")
installed.packages(ggplot)
?find.package
find.package("tidyverse")
find.package("stringr")
find.package("boing")
find.package("swirl")
find.package("swirlstats")
installed.packages()
installed.packages("stringr")
View(df.f)
rm(list=ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
df.f <- merge(df.f, activity_labels, by = "activityID")# %>%
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
df.f <- merge(df.f, activity_labels, by = "activityID")# %>%
select(activity = activity_labels, -activityID)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
df.f <- merge(df.f, activity_labels, by = "activityID")# %>%
select(activity = activity_labels, -"activityID")
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(-activityID)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(label, -activityID)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
rm(list = ls(pattern = "test|train"))
# 4) Use descriptive activity names to name the activities in the data set
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(subject, activity = label, 3:89)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
rm(list = ls(pattern = "test|train"))
# 4) Use descriptive activity names to name the activities in the data set
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(subj, activity = label, 3:89)
df.by.act <- arrange(df.f, activity)
df.by.subj <- arrange(df.f, subj)
head(summarize(df.by.act))
df.by.act
df.by.act <- group_by(df.f, activity)
df.by.subj <- group_by(df.f, subj)
summarize(df.by.act, mean)
View(df.by.act)
View(df.by.subj)
df.by.subj <- arrange(df.f, subj) %>%
group_by(subj)
by.act <- arrange(df.f, activity) %>%
group_by(activity)
by.subj <- arrange(df.f, subj) %>%
group_by(subj)
rm(list=ls("df.by"))
rm(list=ls(pattern="df.by"))
by.act <- arrange(df.f, activity) %>%
group_by(activity)%>%
summarize
View(by.act)
by.act <- arrange(df.f, activity) %>%
group_by(activity)%>%
summarize(mean)
by.subj <- arrange(df.f, subj) %>%
group_by(subj) %>%
summarize(mean)
by.subj <- arrange(df.f, subj) %>%
group_by(subj) %>%
summarize
View(by.subj)
test <- mutate(test, subj = factor(testSubj[,1]), dataSet = "test", activityID = testAct[,1])
#get test subjects, data, and activities
testSubj <- read.table(df_Names[14], header = FALSE)
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
testAct <- read.table(df_Names[16], header = FALSE)
#get training subjects, data, and activities
trainSubj <- read.table(df_Names[26], header = FALSE)
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
trainAct <- read.table(df_Names[28], header = FALSE)
#add columns for subjects and activityID tables
train <- mutate(train, subj = factor(trainSubj[,1]), dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = factor(testSubj[,1]), dataSet = "test", activityID = testAct[,1])
# 2) Merge the training and the test sets.
df <- bind_rows(train, test)
# 3) Extracts only the measurements on the mean and standard deviation for each
# measurement.
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
str(df.f)
rm(list = ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/get_and_clean_data/run_analysis.R')
str(by.act)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
rm(list = ls(pattern = "test|train"))
# 4) Use descriptive activity names to name the activities in the data set
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(subj = factor(subj), activity = label, 3:89)
?factor
trainSubj <- read.table(factor(df_Names[26]), header = FALSE)
trainSubj <- factor(read.table(df_Names[26], header = FALSE))
?read.table
trainSubj <- read.table(df_Names[26], header = FALSE, colClasses = "factor")
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
trainAct <- read.table(df_Names[28], header = FALSE, colClasses = "factor")
train <- mutate(train, subj = trainSubj[,1], dataSet = "train", activityID = trainAct[,1])
str(train)
head(trainSubj)
train <- mutate(train, subj = trainSubj, dataSet = "train", activityID = trainAct[,1])
trainSubj <- read.table(df_Names[26], header = FALSE, colClasses = "factor")
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
trainAct <- read.table(df_Names[28], header = FALSE, colClasses = "factor")
#add columns for subjects and activityID tables
train <- mutate(train, subj = trainSubj, dataSet = "train", activityID = trainAct[,1])
train <- mutate(train, subj = trainSubj[,1], dataSet = "train", activityID = trainAct[,1])
str(train)
names(train)
testSubj <- read.table(df_Names[14], header = FALSE, colClasses = "factor")
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
testAct <- read.table(df_Names[16], header = FALSE, colClasses = "factor")
test <- mutate(test, subj = testSubj[,1], dataSet = "test", activityID = testAct[,1])
df <- bind_rows(train, test)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
str(df.f)
df.f <- select(df, factor(subj), activityID, contains("mean"), contains("std"))
df.f <- select(df, subj = factor(subj), activityID, contains("mean"), contains("std"))
df.f <- select(df, subj = as.factor(subj), activityID, contains("mean"), contains("std"))
str(df.f$subj)
levels(df.f$subj)
quantile(df.f$subj)
hist(df.f$subj)
str(testAct)
str(trainAct)
str(trainSubj)
str(testSubj)
unique(trainSubj)
summarise(trainSubj)
testSubj <- read.table(df_Names[14], header = FALSE)
trainSubj <- read.table(df_Names[26], header = FALSE)
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
train <- mutate(train, subj = trainSubj[,1], dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = testSubj[,1], dataSet = "test", activityID = testAct[,1])
df <- bind_rows(train, test)
str(df$subj)
as.factor(df$subj)
df.f <- select(df, subj = as.factor(df$subj), activityID, contains("mean"), contains("std"))
df.f
str(df.f)
as.factor(df.f$subj)
df.f$subj
df.f <- select(df, subj = as.factor(df.f$subj), activityID, contains("mean"), contains("std"))
testSubj <- read.table(df_Names[14], header = FALSE, colClasses = "integer")
trainSubj <- read.table(df_Names[26], header = FALSE, colClasses = "integer")
train <- mutate(train, subj = trainSubj[,1], dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = testSubj[,1], dataSet = "test", activityID = testAct[,1])
df <- bind_rows(train, test)
df.f <- select(df, subj = as.factor(df$subj), activityID, contains("mean"), contains("std"))
str(df$subj)
as.factor(df$subj)
df.f <- select(df, subj = factor(df$subj), activityID, contains("mean"), contains("std"))
factor(df$subj)
l
trainSubj <- factor(read.table(df_Names[26], header = FALSE), levels = c(1:30))
str(trainSubj)
testSubj <- factor(read.table(df_Names[14], header = FALSE), levels = c(1:30))
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
testAct <- read.table(df_Names[16], header = FALSE, colClasses = "factor")
#get training subjects, data, and activities
trainSubj <- factor(read.table(df_Names[26], header = FALSE), levels = c(1:30))
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
trainAct <- read.table(df_Names[28], header = FALSE, colClasses = "factor")
train <- mutate(train, subj = trainSubj[,1], dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = testSubj[,1], dataSet = "test", activityID = testAct[,1])
# 2) Merge the training and the test sets.
df <- bind_rows(train, test)
train <- mutate(train, subj = trainSubj, dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = testSubj, dataSet = "test", activityID = testAct[,1])
df <- bind_rows(train, test)
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
str(df.f)
rm(list = ls(pattern = "test|train"))
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(subj, activity = label, 3:89)
by.act <- arrange(df.f, activity) %>%
group_by(activity)
by.subj <- arrange(df.f, subj) %>%
group_by(subj)
str(df.f)
by.act <- arrange(df.f, activity) %>%
group_by(activity)
View(by.act)
view(df.f)
View(df.f)
View(df$subj)
testSubj <- factor(read.table(df_Names[14], header = FALSE), levels = c(1:30))
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
testAct <- read.table(df_Names[16], header = FALSE, colClasses = "factor")
#get training subjects, data, and activities
trainSubj <- factor(read.table(df_Names[26], header = FALSE), levels = c(1:30))
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
trainAct <- read.table(df_Names[28], header = FALSE, colClasses = "factor")
#add columns for subjects and activityID tables
train <- mutate(train, subj = trainSubj, dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = testSubj, dataSet = "test", activityID = testAct[,1])
View(test)
View(test$subj)
test$subj
trainSubj <- factor(read.table(df_Names[26], header = FALSE, levels = c(1:30)))
trainSubj <- factor(read.table(df_Names[26], header = FALSE, colClasses = "factor" levels = c(1:30)))
trainSubj <- factor(read.table(df_Names[26], header = FALSE, colClasses = "factor", levels = c(1:30)))
trainSubj <- factor(read.table(df_Names[26], header = FALSE, colClasses = "factor"), levels = c(1:30))
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
train <- mutate(train, subj = trainSubj, dataSet = "train", activityID = trainAct[,1])
train$subj
View(trainSubj)
trainSubj
trainSubj <- read.table(df_Names[26], header = FALSE, colClasses = "factor")
trainSubj
train <- mutate(train, subj = factor(trainSubj$V1, levels = c(1:30)), dataSet = "train", activityID = trainAct[,1])
str(train$subj)
#get test subjects, data, and activities
testSubj <- factor(read.table(df_Names[14], header = FALSE),  colClasses = "factor")
test <- read.table(df_Names[15], header = FALSE, col.names = colNames$names)
testAct <- read.table(df_Names[16], header = FALSE, colClasses = "factor")
#get training subjects, data, and activities
trainSubj <- read.table(df_Names[26], header = FALSE, colClasses = "factor")
train <- read.table(df_Names[27], header = FALSE, col.names = colNames$names)
trainAct <- read.table(df_Names[28], header = FALSE, colClasses = "factor")
#add columns for subjects and activityID tables
train <- mutate(train, subj = factor(trainSubj$V1, levels = c(1:30)), dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = factor(testSubj$V1, levels = c(1:30)), dataSet = "test", activityID = testAct[,1])
testSubj <- factor(read.table(df_Names[14], header = FALSE,  colClasses = "factor")
testSubj <- read.table(df_Names[14], header = FALSE, colClasses = "factor")
train <- mutate(train, subj = factor(trainSubj$V1, levels = c(1:30)), dataSet = "train", activityID = trainAct[,1])
test <- mutate(test, subj = factor(testSubj$V1, levels = c(1:30)), dataSet = "test", activityID = testAct[,1])
df <- bind_rows(train, test)
df$subj
df.f <- select(df, subj, activityID, contains("mean"), contains("std"))
df.f <- merge(df.f, activity_labels, by = "activityID") %>%
select(subj, activity = label, 3:89)
by.act <- arrange(df.f, activity) %>%
group_by(activity)
View(by.act)
by.act <- arrange(df.f, subj) %>%
group_by(activity)
by.subj <- arrange(df.f, activity) %>%
group_by(subj)
View(by.act)
by.subj <- arrange(df.f, subj) %>%
group_by(activity)
by.act <- arrange(df.f, activity) %>%
group_by(subj)
by.subj <- arrange(df.f, subj, activity) %>%
group_by(subj)
by.act <- arrange(df.f, activity, subj) %>%
group_by(activity)
View(by.act)
View(by.subj)
by.subj <- arrange(df.f, subj, activity) %>%
group_by(subj) %>%
summarize_all(mean)
by.act <- arrange(df.f, activity, subj) %>%
group_by(activity) %>%
summarize_all(mean)
View(by.act)
by.subj <- arrange(df.f, subj, activity) %>%
group_by(subj, activity) %>%
summarize_all(mean)
names(df.f)
install.packages(c("curl", "haven"))
install.packages("knitr")
library("markdown", lib.loc="\\\\files/user files/amsilverman/R/win-library/3.3")
install.packages("markdown")
library("markdown")
library("knitr")
library("rmarkdown")
install.packages("rmarkdown")
library("rmarkdown")
pwd()
ls()
getwd()
